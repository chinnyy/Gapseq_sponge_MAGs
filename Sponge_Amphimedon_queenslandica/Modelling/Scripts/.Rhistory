#################### st1. Get input model files and output docs #####################
library(stringr)
library(sybil)
# Set working directory to where the Bacteria folder is located
setwd= setwd("C:/Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Amphimedon_queenslandica/Modelling/Scripts")
# Import the gap-filled modified object model (gfM):
gfM_dir = 'AqS1/'
model_id = 'AqS1' # manually change this!
# Create new folder where the output will be stored
new_folder_nm = paste('/07_gf_model/',gfM_dir,sep = '')
dir.create("07_gf_model")
dir.create(paste(setwd,new_folder_nm,sep = ''))
# Assign output RDS file name:
outfile_add_043= paste(setwd, new_folder_nm,'/043_model_',model_id,'_gfM_list_react.tsv',sep = '')
outfile_add_045= paste(setwd, new_folder_nm,'/045_model_',model_id,'_gfM_list_metabolites.tsv',sep = '')
outfile_add_046= paste(setwd, new_folder_nm,'/046_model_',model_id,'_gfM_Smat.csv',sep = '')
infile_046     = outfile_add_046
outfile_050    = paste(setwd, new_folder_nm,'/050_model_',model_id,'_gfM_Smat_fluxes.csv',sep = "")
outfile_050_2  = paste(setwd, new_folder_nm,'/050_2_model_',model_id,'_gfM_Smat_fluxes.csv',sep = "")
outfile_050_3 = paste(setwd, new_folder_nm,'/050_model_',model_id,'_gfM_Smat_fluxes_ETC_complexes.tsv',sep = "")
# Load the model RDS file
model_gfm <- readRDS(paste(setwd,"/Input_files/AqS1/AqS1.RDS",sep = ""))
model_gfm_list <- list(model_gfm@react_id, model_gfm@react_name, model_gfm@react_rev,
model_gfm@react_single, model_gfm@react_de,model_gfm@lowbnd,
model_gfm@uppbnd, model_gfm@obj_coef, model_gfm@gprRules,
model_gfm@gpr, model_gfm@react_attr)
df_model_gfm_list  <- as.data.frame(model_gfm_list, row.names = NULL)
colnames(df_model_gfm_list) <- c('react_id','react_name','react_rev','react_single',
'react_de','lowbnd','uppbnd','obj_coef','gprRules',
'gpr','seed',"rxn","name","ec","tc","qseqid",
"pident","evalue","bitscore","qcovs","stitle",
"sstart","send","pathway","blast.status",
"pathway.status","complex","exception",
"complex.status","gs.origin","annotation","MNX_ID",
"seedID","keggID","biggID","biocycID")
write.table(df_model_gfm_list, file = outfile_add_043,quote = F,row.names = F,sep = '/t')
# The output contains many KEGG reaction ids, which can be converted to SEED RXN ids by using seed_reactions.tsv.
########################## st2. Extract all metabolites from the modified model (MM). #############################
model_gfm_met_name = model_gfm@met_name
model_gfm_met_id = model_gfm@met_id
# model_gfm: Generate a dataframe with metabolite info for each model
model_gfm_list_met <- list(model_gfm@met_id, model_gfm@met_name, model_gfm@met_comp, model_gfm@met_single, model_gfm@met_de)
df_model_gfm_list_met <- as.data.frame(model_gfm_list_met, row.names = NULL)
colnames(df_model_gfm_list_met) <- c('met_id','met_name','met_comp','met_single','met_de')
# R Sort a Data Frame using Order()
df_model_gfm_list_met_sort <- df_model_gfm_list_met[order(df_model_gfm_list_met$met_id),]
write.table(df_model_gfm_list_met_sort, file = outfile_add_045, quote = F,row.names = F,sep = '/t')
########################## st3. Extract Stoichiometric matrix from the modified model (MM). #############################
model_gfm_Smat <- model_gfm@S
model_gfm_Smat_mx = as.matrix(model_gfm@S)
colnames(model_gfm_Smat_mx)<-cbind(model_gfm@react_id)
row.names(model_gfm_Smat_mx)<-cbind(model_gfm@met_id)
write.csv(model_gfm_Smat_mx, file = outfile_add_046, quote = FALSE,row.names = T)
# In this table, you can check the flux (values) of a compound (e.g. cpd16503[e0]) of this model based on the reaction ID (e.g. EX_cpd16503_e0).
########################## st6. Check flux from the gfM. #############################
mod = model_gfm
# Adding a new column called 'sol$fluxes' with the same length to the 'reaction id', which shows fluxes of each reaction.
sol <- sybil::optimizeProb(mod, retOptSol=F, algorithm = "fba") # find a list (of 7,sol), which include flux info of 765 reactions for this model.
model_gfm_flux_list <- as.list(sol$fluxes)
model_gfm_flux_list <- as.data.frame(sol$fluxes)
model_gfm_Smat <- mod@S
model_gfm_Smat <- read.csv(file = infile_046,row.names = 'X')
t_model_gfm_Smat <- as.data.frame(t(model_gfm_Smat))
cbind_t_model_gfm_Smat<- as.data.frame(cbind(model_gfm_flux_list, t_model_gfm_Smat))
write.csv(cbind_t_model_gfm_Smat, quote = FALSE,file = outfile_050)
# IMPORTANT: check the flux value of ADD_BIOMASS, if it is negative, it is not right!
gapseq_version = 'gapseq_v20220329'
input_dir = paste(setwd,'/07_gf_model/',gfM_dir,sep = '')
model_id <- 'AqS1'
mycmd1 = 'python3 /Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Amphimedon_queenslandica/Modelling/Scripts/Python_scripts/Assign_names_2_ID_of_active_rxn_in_Smax_arg.py'
system(paste(mycmd1,
'-in_dir',input_dir,
'-modNm', model_id,
'-gs',gapseq_version, sep = ' '))
input_dir
system(paste(mycmd1,
'-in_dir',input_dir,
'-modNm', model_id,
'-gs',gapseq_version, sep = ' '))
mycmd1 = 'python3 C:/Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Amphimedon_queenslandica/Modelling/Scripts/Python_scripts/Assign_names_2_ID_of_active_rxn_in_Smax_arg.py'
system(paste(mycmd1,
'-in_dir',input_dir,
'-modNm', model_id,
'-gs',gapseq_version, sep = ' '))
input_dir
model_id = 'AqS1'
mycmd1 = 'python3 /Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Amphimedon_queenslandica/Modelling/Scripts/Python_scripts/Assign_names_2_ID_of_active_rxn_in_Smax_arg.py'
paste(mycmd1,
'-in_dir',input_dir,
'-modNm', model_id,
'-gs',gapseq_version, sep = ' ')
# path to all-Pathways.tbl
all_path = paste(setwd,'/Input_files',model_id, sep = '')
all_path
# path to all-Pathways.tbl
all_path = paste(setwd,'/Input_files/',model_id, sep = '')
# path to all-Pathways.tbl
all_path = paste(setwd,'/Input_files/',model_id, sep = '')
all_path
# path to all-Pathways.tbl
all_path = paste(setwd,'/Input_files/',gfM_dir,model_id,'-all-Pathways', sep = '')
all_path
model_043 = paste(setwd,'/07_gf_model',gfM_dir,'043_model_',model_id,'_gfM_list_react.tsv', sep = '')
model_043
model_043 = paste(setwd,'/07_gf_model/',gfM_dir,'043_model_',model_id,'_gfM_list_react.tsv', sep = '')
model_043
system(paste(mycmd2,
'-dir_gfM',input_dir,
'-gs',gapseq_version,
'-dict_pwy_tbl',all_path,
'-dict_043',model_043,
sep = ' '))
mycmd2 = 'python3 /Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Amphimedon_queenslandica/Modelling/Scripts/Python_scripts/Get_a_file_of_formatted_MS_reactions_with_assigned_reaction_and_pathway_status.py'
system(paste(mycmd2,
'-dir_gfM',input_dir,
'-gs',gapseq_version,
'-dict_pwy_tbl',all_path,
'-dict_043',model_043,
sep = ' '))
input_dir
setwd
paste(mycmd2,
'-dir_gfM',input_dir,
'-gs',gapseq_version,
'-dict_pwy_tbl',all_path,
'-dict_043',model_043,
sep = ' ')
all_path
# path to all-Pathways.tbl
all_path = paste(setwd,'/Input_files/',gfM_dir,model_id,'-all-Pathways.tbl', sep = '')
model_043 = paste(setwd,'/07_gf_model/',gfM_dir,'043_model_',model_id,'_gfM_list_react.tsv', sep = '')
paste(mycmd2,
'-dir_gfM',input_dir,
'-gs',gapseq_version,
'-dict_pwy_tbl',all_path,
'-dict_043',model_043,
sep = ' ')
model_043
model_043 = paste('043_model_',model_id,'_gfM_list_react.tsv', sep = '')
model_043
paste(mycmd2,
'-dir_gfM',input_dir,
'-gs',gapseq_version,
'-dict_pwy_tbl',all_path,
'-dict_043',model_043,
sep = ' ')
system(paste(mycmd1,
'-in_dir',input_dir,
'-modNm', model_id,
'-gs',gapseq_version, sep = ' '))
Sys.getenv("PATH")
Sys.getenv("PATH")
system(paste(mycmd1,
'-in_dir',input_dir,
'-modNm', model_id,
'-gs',gapseq_version, sep = ' '))
path <- Sys.getenv("PATH")
path <- Sys.getenv("PATH")
Sys.getenv("PATH")
system(paste(mycmd1,
'-in_dir',input_dir,
'-modNm', model_id,
'-gs',gapseq_version, sep = ' '))
mycmd1 = 'python310 /Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Amphimedon_queenslandica/Modelling/Scripts/Python_scripts/Assign_names_2_ID_of_active_rxn_in_Smax_arg.py'
system(paste(mycmd1,
'-in_dir',input_dir,
'-modNm', model_id,
'-gs',gapseq_version, sep = ' '))
mycmd1 = 'python3 /Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Amphimedon_queenslandica/Modelling/Scripts/Python_scripts/Assign_names_2_ID_of_active_rxn_in_Smax_arg.py'
path <- c("C:\\Program Files\\Python\\Python310", path)
path <- paste(path,collapse=";")
Sys.setenv(PATH=path)
system(paste(mycmd1,
'-in_dir',input_dir,
'-modNm', model_id,
'-gs',gapseq_version, sep = ' '))
system(paste(mycmd1,
'-in_dir',input_dir,
'-modNm', model_id,
'-gs',gapseq_version, sep = ' '))
str_split(Sys.getenv("PATH"), ";")
path <- c("C:\\Program Files\\Python\\", path)
path <- paste(path,collapse=";")
> Sys.setenv(PATH=path)
Sys.setenv(PATH=path)
str_split(Sys.getenv("PATH"), ";")
system(paste(mycmd1,
'-in_dir',input_dir,
'-modNm', model_id,
'-gs',gapseq_version, sep = ' '))
system(paste(mycmd1,
'-in_dir',input_dir,
'-modNm', model_id,
'-gs',gapseq_version, sep = ' '))
mycmd1 = 'python3 /Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Amphimedon_queenslandica/Modelling/Scripts/Python_scripts/Assign_names_2_ID_of_active_rxn_in_Smax_arg.py'
system(paste(mycmd1,
'-in_dir',input_dir,
'-modNm', model_id,
'-gs',gapseq_version, sep = ' '))
mycmd1 = 'py /Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Amphimedon_queenslandica/Modelling/Scripts/Python_scripts/Assign_names_2_ID_of_active_rxn_in_Smax_arg.py'
system(paste(mycmd1,
'-in_dir',input_dir,
'-modNm', model_id,
'-gs',gapseq_version, sep = ' '))
system(paste(mycmd1,
'-in_dir',input_dir,
'-modNm', model_id,
'-gs',gapseq_version, sep = ' '))
mycmd2 = 'py /Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Amphimedon_queenslandica/Modelling/Scripts/Python_scripts/Get_a_file_of_formatted_MS_reactions_with_assigned_reaction_and_pathway_status.py'
# path to all-Pathways.tbl
all_path = paste(setwd,'/Input_files/',gfM_dir,model_id,'-all-Pathways.tbl', sep = '')
model_043 = paste('043_model_',model_id,'_gfM_list_react.tsv', sep = '')
system(paste(mycmd2,
'-dir_gfM',input_dir,
'-gs',gapseq_version,
'-dict_pwy_tbl',all_path,
'-dict_043',model_043,
sep = ' '))
# Please open the python script "Get_a_file_of_formatted_MS_reactions_with_assigned_reaction_and_pathway_status.py", and change the path of "dict_gs_seed_rxn" in line 63.
mycmd2 = paste('-dir_gfM ',setwd,'/07_gf_model/',gfM_dir, sep = '')
mycmd2
mycmd3 = '-gs gapseq_v20220329'
mycmd1 = 'py /Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Amphimedon_queenslandica/Modelling/Scripts/Python_scripts/Get_a_file_of_formatted_MS_reactions_with_assigned_reaction_and_pathway_status.py'
# Please open the python script "Get_a_file_of_formatted_MS_reactions_with_assigned_reaction_and_pathway_status.py", and change the path of "dict_gs_seed_rxn" in line 63.
mycmd2 = paste('-dir_gfM ',setwd,'/07_gf_model/',gfM_dir, sep = '')
mycmd3 = '-gs gapseq_v20220329'
mycmd4 = '-dict_pwy_tbl Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Amphimedon_queenslandica/Modelling/Scripts/Input_files/AqS1/AqS1-all-Pathways.tbl'
mycmd5 = '-dict_043 043_model_AqS1_gfM_list_react.tsv'
system(paste(mycmd1,mycmd2,mycmd3,mycmd4,mycmd5,sep = ' '))
setwd()
setwd
mycmd4 = '-dict_pwy_tbl C:/Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Amphimedon_queenslandica/Modelling/Scripts/Input_files/AqS1/AqS1-all-Pathways.tbl'
system(paste(mycmd1,mycmd2,mycmd3,mycmd4,mycmd5,sep = ' '))
paste('-in_dir ',getwd,'/07_gf_model/',gfM_dir,sep = '')
paste('-in_dir ',setwd,'/07_gf_model/',gfM_dir,sep = '')
input_dir
paste('-met ',met,sep = '')
paste('-gs ',gapseq_version,sep = '')
paste('-modNm ', model_id,sep='')
mycmd3 = 'py /Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Amphimedon_queenslandica/Modelling/Scripts/Python_scripts/Get_active_rxn_Equ_annot_by_met_from_final_model_argv3.py'
for (met in list_met) {
print(met)
met_index = paste('-met ',met,sep = '')
system(paste(mycmd3,
'-in_dir',input_dir,
met_index,
'-gs',gapseq_version,
'-modNm', model_id,
sep = ' '))
}
# Create a list of compounds that you have interests in their flux.
list_met = list('cpd00013', #NH3-c0	and NH3-e0
# 'cpd00165', #Hydroxylamine
# 'cpd00011', #CO2
# 'cpd00025', #H2O2
# 'cpd00242', #H2CO3
'cpd00418', # NO
'cpd00528', # N2
# 'cpd00073', # Urea
'cpd00075', # Nitrite
'cpd00209', # Nitrate
# 'cpd00136', # 4-Hydroxybenzoate
# 'cpd00020', # Pyruvate for glycolysis
# 'cpd00027', # D-Glucose
# 'cpd00159', # L-Lactate
# 'cpd00221', # D-Lactate
# 'cpd00086', # Propionyl-CoA for pyruvate fermentation to propanoate I
# 'cpd19008', # (R)-Acetoin for pyruvate fermentation to (R)-acetoin I
# 'cpd11640', # H2 hydrogen
# 'cpd00793', # B1 Thiamine phosphate
# 'cpd00220', #	B2 (Riboflavin); Riboflavin-c0
# 'cpd00644', # B5 (pantothenate); PAN, Pantothenat
# 'cpd00263', #	B6 (Pyridoxine)
# 'cpd00104', #	B7 (Biotin); BIOT
# 'cpd00730', #	B12 OH-Cbl (Hydroxocobalamin)
# 'cpd01826', #	B12 CN-Cbl (Cyanocobalamin)
# 'cpd12878', #	B12 Me-Cbl (Methylcobalamin)
# 'cpd00166', #	B12 Ado-Cbl (adenosylcobalamin); Calomide-c0
# 'cpd00218', # Niacin
# 'cpd00133', # Nicotinamide
#
# 'cpd03177', #"Hydrazine"
# 'cpd11798', #Ferrocytochrome c2
# 'cpd01024', #methane
# 'cpd00146', # Carbamoylphosphate[0]: product of the 1st reaction of the urea cycle
# 'cpd10516', # fe3+
'cpd00007', #O2
# 'cpd00002', #ATP
# 'cpd00067', # H+
# 'cpd11606', #Menaquinone 7
# 'cpd15560' #Ubiquinone-8
'cpd00074', # Sulfer      S (0)
'cpd00239', # H2S         H2S (-1)
'cpd00081', # Sulfite     H2SO3 (+4)
'cpd00268', # Thiosulfate H2S2O3 (+2)
'cpd00048', # Sulfate     H2SO4 (+3)
# 'cpd01270', # FMNH2
'cpd00193', # APS:Adenosine 5'-phosphosulfate
'cpd00042', # GSH: 5-L-Glutamyl-L-cysteinylglycine
'cpd17456', # S-Sulfanylglutathione, 4
'cpd01414', # Tetrathionate
'cpd00109', # CytC 3+
'cpd00210',  # Taurine      organic S
'cpd11416' #biomass
)
for (met in list_met) {
print(met)
met_index = paste('-met ',met,sep = '')
system(paste(mycmd3,
'-in_dir',input_dir,
met_index,
'-gs',gapseq_version,
'-modNm', model_id,
sep = ' '))
}
