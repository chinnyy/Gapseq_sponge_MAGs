"pident","evalue","bitscore","qcovs","stitle",
"sstart","send","pathway","blast.status",
"pathway.status","complex","exception",
"complex.status","gs.origin","annotation","MNX_ID",
"seedID","keggID","biggID","biocycID")
write.table(df_model_gfm_list, file = outfile_add_043,quote = F,row.names = F,sep='\t')
# The output contains many KEGG reaction ids, which can be converted to SEED RXN ids by using seed_reactions.tsv.
########################## st2. Extract all metabolites from the modified model (MM). #############################
model_gfm_met_name = model_gfm@met_name
model_gfm_met_id = model_gfm@met_id
# model_gfm: Generate a dataframe with metabolite info for each model
model_gfm_list_met <- list(model_gfm@met_id, model_gfm@met_name, model_gfm@met_comp, model_gfm@met_single, model_gfm@met_de)
df_model_gfm_list_met <- as.data.frame(model_gfm_list_met, row.names = NULL)
colnames(df_model_gfm_list_met) <- c('met_id','met_name','met_comp','met_single','met_de')
# R Sort a Data Frame using Order()
df_model_gfm_list_met_sort <- df_model_gfm_list_met[order(df_model_gfm_list_met$met_id),]
write.table(df_model_gfm_list_met_sort, file = outfile_add_045, quote = F,row.names = F,sep='\t')
########################## st3. Extract Stoichiometric matrix from the modified model (MM). #############################
model_gfm_Smat <- model_gfm@S
model_gfm_Smat_mx = as.matrix(model_gfm@S)
colnames(model_gfm_Smat_mx)<-cbind(model_gfm@react_id)
row.names(model_gfm_Smat_mx)<-cbind(model_gfm@met_id)
write.csv(model_gfm_Smat_mx, file = outfile_add_046, quote = FALSE,row.names = T)
# In this table, you can check the flux (values) of a compound (e.g. cpd16503[e0]) of this model based on the reaction ID (e.g. EX_cpd16503_e0).
########################## st6. Check flux from the gfM. #############################
mod = model_gfm
# Adding a new column called 'sol$fluxes' with the same length to the 'reaction id', which shows fluxes of each reaction.
sol <- sybil::optimizeProb(mod, retOptSol=F, algorithm = "fba") # find a list (of 7,sol), which include flux info of 765 reactions for this model.
model_gfm_flux_list <- as.list(sol$fluxes)
model_gfm_flux_list <- as.data.frame(sol$fluxes)
model_gfm_Smat <- mod@S
model_gfm_Smat <- read.csv(file = infile_046,row.names = 'X')
t_model_gfm_Smat <- as.data.frame(t(model_gfm_Smat))
cbind_t_model_gfm_Smat<- as.data.frame(cbind(model_gfm_flux_list, t_model_gfm_Smat))
write.csv(cbind_t_model_gfm_Smat, quote = FALSE,file = outfile_050)
# IMPORTANT: check the flux value of ADD_BIOMASS, if it is negative, it is not right!
gapseq_version = 'gapseq_v20220329'
input_dir = paste(setwd,'/07_gf_model/',gfM_dir,sep = '')
model_id = 'AQ2'
mycmd1 = 'py /Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Aphrocallistes_beatrix/Modelling/Scripts/Python_scripts/Assign_names_2_ID_of_active_rxn_in_Smax_arg.py'
# Please open "Assign_names_2_ID_of_active_rxn_in_Smax_arg.py" and modify the full path of Dict input files from line 78 to line 80.
system(paste(mycmd1,
'-in_dir',input_dir,
'-modNm', model_id,
'-gs',gapseq_version, sep = ' '))
# output files:
# 051_model_AQ2_gfM_Smat_fluxes.flux_lt0.csv
# 052_model_AQ2_gfM_Smat_fluxes.flux_lt0.annotate.tsv
############################################ Run the following script once to get the "seed_reactions_corrected.formatted_reat_add.status.tsv" for the related 043 output file:####################################################
mycmd2 = 'py /Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Aphrocallistes_beatrix/Modelling/Scripts/Python_scripts/Get_a_file_of_formatted_MS_reactions_with_assigned_reaction_and_pathway_status.py'
# Open the python script "Get_a_file_of_formatted_MS_reactions_with_assigned_reaction_and_pathway_status.py", and change the path of "dict_gs_seed_rxn" in line 63.
# path to all-Pathways.tbl
all_path = paste(setwd,'/Input_files/',gfM_dir,model_id,'-all-Pathways.tbl', sep = '')
model_043 = paste('043_model_',model_id,'_gfM_list_react.tsv', sep = '')
system(paste(mycmd2,
'-dir_gfM',input_dir,
'-gs',gapseq_version,
'-dict_pwy_tbl',all_path,
'-dict_043',model_043,
sep = ' '))
# output files:
# seed_reactions_corrected.formatted_reat_add.status.tsv
########### Follow with python script of 'Get_active_rxn_Equ_annot_by_met_from_final_model_argv.py'############
# Create a list of compounds that you have interests in their flux.
list_met = list('cpd00013', #NH3-c0	and NH3-e0
# 'cpd00165', #Hydroxylamine
# 'cpd00011', #CO2
# 'cpd00025', #H2O2
# 'cpd00242', #H2CO3
'cpd00418', # NO
'cpd00528', # N2
# 'cpd00073', # Urea
'cpd00075', # Nitrite
'cpd00209', # Nitrate
# 'cpd00136', # 4-Hydroxybenzoate
# 'cpd00020', # Pyruvate for glycolysis
# 'cpd00027', # D-Glucose
# 'cpd00159', # L-Lactate
# 'cpd00221', # D-Lactate
# 'cpd00086', # Propionyl-CoA for pyruvate fermentation to propanoate I
# 'cpd19008', # (R)-Acetoin for pyruvate fermentation to (R)-acetoin I
# 'cpd11640', # H2 hydrogen
# 'cpd00793', # B1 Thiamine phosphate
# 'cpd00220', #	B2 (Riboflavin); Riboflavin-c0
# 'cpd00644', # B5 (pantothenate); PAN, Pantothenat
# 'cpd00263', #	B6 (Pyridoxine)
# 'cpd00104', #	B7 (Biotin); BIOT
# 'cpd00730', #	B12 OH-Cbl (Hydroxocobalamin)
# 'cpd01826', #	B12 CN-Cbl (Cyanocobalamin)
# 'cpd12878', #	B12 Me-Cbl (Methylcobalamin)
# 'cpd00166', #	B12 Ado-Cbl (adenosylcobalamin); Calomide-c0
# 'cpd00218', # Niacin
# 'cpd00133', # Nicotinamide
#
# 'cpd03177', #"Hydrazine"
# 'cpd11798', #Ferrocytochrome c2
# 'cpd01024', #methane
# 'cpd00146', # Carbamoylphosphate[0]: product of the 1st reaction of the urea cycle
# 'cpd10516', # fe3+
'cpd00007', #O2
# 'cpd00002', #ATP
# 'cpd00067', # H+
# 'cpd11606', #Menaquinone 7
# 'cpd15560' #Ubiquinone-8
'cpd00074', # Sulfer      S (0)
'cpd00239', # H2S         H2S (-1)
'cpd00081', # Sulfite     H2SO3 (+4)
'cpd00268', # Thiosulfate H2S2O3 (+2)
'cpd00048', # Sulfate     H2SO4 (+3)
# 'cpd01270', # FMNH2
'cpd00193', # APS:Adenosine 5'-phosphosulfate
'cpd00042', # GSH: 5-L-Glutamyl-L-cysteinylglycine
'cpd17456', # S-Sulfanylglutathione, 4
'cpd01414', # Tetrathionate
'cpd00109', # CytC 3+
'cpd00210',  # Taurine      organic S
'cpd11416' #biomass
)
mycmd3 = 'py /Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Aphrocallistes_beatrix/Modelling/Scripts/Python_scripts/Get_active_rxn_Equ_annot_by_met_from_final_model_argv3.py'
# Create a new file to store 053_model
dir.create(paste(setwd,'/07_gf_model/',model_id,'/053_model',sep = ''), showWarnings = TRUE, recursive = TRUE)
for (met in list_met) {
print(met)
met_index = paste('-met ',met,sep = '')
system(paste(mycmd3,
'-in_dir',input_dir,
met_index,
'-gs',gapseq_version,
'-modNm', model_id,
sep = ' '))
}
# output files:
# RETURNS A WHOLE LOT OF OUTPUT, DEPENDING ON YOUR LIST_MET LENGTH
# Added a little more: create a folder "053_model" to store these outputs
######################## Follow with python script of 'Get_ETC_complexes_reaction_flux_argv.py '########################
mycmd4 = 'py /Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Aphrocallistes_beatrix/Modelling/Scripts/Python_scripts/Get_ETC_complexes_reaction_flux_argv.py'
system(paste(mycmd4,
'-in_dict ',outfile_050,
'-in_key ',paste(setwd,'/Input_files/DB_files/EC_num_of_ETC_complexes.txt',sep = ''),
'-gs',gapseq_version,
'-out ', outfile_050_3,
sep = ' '))
# output files:
# 050_model_AQ2_gfM_Smat_fluxes_ETC_complexes.tsv
### New input by faith,
### This additional part is to generate the "XXXX_completely_filled_in_reactions.txt"
### This file consist of reactions only present in the "043" files of the final model compared to the draft model.
### However to get that, we must first generate the files based on the draft model
## Generating files based on draft model
draft_id <- "draft_AQ2"
# Create a new file to store 053_model
dir.create(paste(setwd,'/07_gf_model/',model_id,'/draft',sep = ''), showWarnings = TRUE, recursive = TRUE)
draft_folder<- paste(new_folder_nm,'draft/',sep = '')
# Assign output RDS file name:
outfile_add_043= paste(setwd, draft_folder,'/043_model_',draft_id,'_gfM_list_react.tsv',sep = '')
outfile_add_045= paste(setwd, draft_folder,'/045_model_',draft_id,'_gfM_list_metabolites.tsv',sep = '')
outfile_add_046= paste(setwd, draft_folder,'/046_model_',draft_id,'_gfM_Smat.csv',sep = '')
infile_046     = outfile_add_046
outfile_050    = paste(setwd, draft_folder,'/050_model_',draft_id,'_gfM_Smat_fluxes.csv',sep = "")
outfile_050_2  = paste(setwd, draft_folder,'/050_2_model_',draft_id,'_gfM_Smat_fluxes.csv',sep = "")
outfile_050_3 = paste(setwd, draft_folder,'/050_model_',draft_id,'_gfM_Smat_fluxes_ETC_complexes.tsv',sep = "")
# Load the model RDS file
draft_gfm <- readRDS(paste(setwd,"/Input_files/AQ2/AQ2-draft.RDS",sep = ""))
## Warning message: In readRDS(paste(setwd, "/Input_files/AQ2/AQ2-draft.RDS", sep = "")) :strings not representable in native encoding will be translated to UTF-8
#### STEP 1.2: EXTRACT KEGG REACTION IDS FROM .RDS FILE ####
# Extract all reactions from the addReact OM.
draft_gfm_list <- list(draft_gfm@react_id, draft_gfm@react_name, draft_gfm@react_rev,
draft_gfm@react_single, draft_gfm@react_de,draft_gfm@lowbnd,
draft_gfm@uppbnd, draft_gfm@obj_coef, draft_gfm@gprRules,
draft_gfm@gpr, draft_gfm@react_attr)
df_draft_gfm_list  <- as.data.frame(draft_gfm_list, row.names = NULL)
colnames(df_draft_gfm_list) <- c('react_id','react_name','react_rev','react_single',
'react_de','lowbnd','uppbnd','obj_coef','gprRules',
'gpr','seed',"rxn","name","ec","tc","qseqid",
"pident","evalue","bitscore","qcovs","stitle",
"sstart","send","pathway","blast.status",
"pathway.status","complex","exception",
"complex.status","gs.origin","annotation","MNX_ID",
"seedID","keggID","biggID","biocycID")
write.table(df_draft_gfm_list, file = outfile_add_043,quote = F,row.names = F,sep='\t')
# The output contains many KEGG reaction ids, which can be converted to SEED RXN ids by using seed_reactions.tsv.
########################## st2. Extract all metabolites from the modified model (MM). #############################
draft_gfm_met_name = draft_gfm@met_name
draft_gfm_met_id = draft_gfm@met_id
# draft_gfm: Generate a dataframe with metabolite info for each model
draft_gfm_list_met <- list(draft_gfm@met_id, draft_gfm@met_name, draft_gfm@met_comp, draft_gfm@met_single, draft_gfm@met_de)
df_draft_gfm_list_met <- as.data.frame(draft_gfm_list_met, row.names = NULL)
colnames(df_draft_gfm_list_met) <- c('met_id','met_name','met_comp','met_single','met_de')
# R Sort a Data Frame using Order()
df_draft_gfm_list_met_sort <- df_draft_gfm_list_met[order(df_draft_gfm_list_met$met_id),]
write.table(df_draft_gfm_list_met_sort, file = outfile_add_045, quote = F,row.names = F,sep='\t')
########################## st3. Extract Stoichiometric matrix from the modified model (MM). #############################
draft_gfm_Smat <- draft_gfm@S
draft_gfm_Smat_mx = as.matrix(draft_gfm@S)
colnames(draft_gfm_Smat_mx)<-cbind(draft_gfm@react_id)
row.names(draft_gfm_Smat_mx)<-cbind(draft_gfm@met_id)
write.csv(draft_gfm_Smat_mx, file = outfile_add_046, quote = FALSE,row.names = T)
# In this table, you can check the flux (values) of a compound (e.g. cpd16503[e0]) of this model based on the reaction ID (e.g. EX_cpd16503_e0).
########################## st6. Check flux from the gfM. #############################
mod = draft_gfm
# Adding a new column called 'sol$fluxes' with the same length to the 'reaction id', which shows fluxes of each reaction.
sol <- sybil::optimizeProb(mod, retOptSol=F, algorithm = "fba") # find a list (of 7,sol), which include flux info of 765 reactions for this model.
draft_gfm_flux_list <- as.list(sol$fluxes)
draft_gfm_flux_list <- as.data.frame(sol$fluxes)
draft_gfm_Smat <- mod@S
draft_gfm_Smat <- read.csv(file = infile_046,row.names = 'X')
t_draft_gfm_Smat <- as.data.frame(t(draft_gfm_Smat))
cbind_t_draft_gfm_Smat<- as.data.frame(cbind(draft_gfm_flux_list, t_draft_gfm_Smat))
write.csv(cbind_t_draft_gfm_Smat, quote = FALSE,file = outfile_050)
# IMPORTANT: check the flux value of ADD_BIOMASS, if it is negative, it is not right!
### Generating "XXXX_completely_filled_in_reactions.txt"
# This file consist of reactions only present in the "043" files of the final model compared to the draft model.
# The 043 file for final model is stored in df_model_gfm_list
# The 043 file for draft model is stored in df_draft_gfm_list
filled_rxn<-anti_join(df_model_gfm_list,df_draft_gfm_list, by="react_id")
write.table(filled_rxn, file = paste(setwd,new_folder_nm,model_id,"_completely_filled_in_reactions.txt", sep = ""), sep = "")
# Set to where you want the script to run on
dir_out = setwd('/Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Aphrocallistes_beatrix/Modelling/Scripts')
gapseq_version  = 'gapseq_v20220329'
# Import the gap-filled modified object model (gfM):
# Change accordingly to the name of the object model!
gfM_dir = 'AQ2/'
model_id = 'AQ2'
# Navigate to the python code "Get_formatted_equations_n_flux_of_MS_react_in_gfModel.py"
python_code  = 'py /Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Aphrocallistes_beatrix/Modelling/Scripts/Python_scripts/Get_formatted_equations_n_flux_of_MS_react_in_gfModel.py'
# Navigate to where the seed reaction tsv "seed_reactions_corrected.formatted_reat_add.tsv"
dict_seed_reactions_corrected_tsv   = paste('/Users/chiny/Bioinfo/software/gapseq/',gapseq_version,'/Shan_output_files/seed_reactions_corrected.formatted_reat_add.tsv',sep = '')
# Navigate to where the Smat_fluxes file is located (e.g."050_model_XXXX_gfM_Smat_fluxes.csv")
infile_flux = paste(dir_out,'/07_gf_model/',gfM_dir,'050_model_',model_id,'_gfM_Smat_fluxes.csv',sep = '')
# Navigate to file with flux of MS ids (050_model_xxxxxx_gfMOM_Smat_fluxes.csv)
infile_key_list = paste(dir_out,'/07_gf_model/',gfM_dir,model_id,'_completely_filled_in_reactions.txt',sep = '')
outfile_key_list_equation_formatted = paste(dir_out,'/medium',model_id,'_completely_filled_in_reactions.equation_formatted_n_fluxes.txt',sep = '')
commands = paste(python_code,
'-infile_MSid',infile_key_list,
'-infile_flux', infile_flux,
'-db',dict_seed_reactions_corrected_tsv,
'-outfile',outfile_key_list_equation_formatted,
'-gs',gapseq_version, sep = ' ')
system(commands)
##################### st1. Get input model files and output docs #####################
library(stringr)
library(sybil)
library(dplyr)
# Set working directory to where the Bacteria folder is located
setwd= setwd("C:/Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Aphrocallistes_beatrix/Modelling/Scripts")
# Import the gap-filled modified object model (gfM):
gfM_dir = 'VYCS01/'
model_id = 'VYCS01'
# Create new folder where the output will be stored
new_folder_nm = paste('/07_gf_model/',gfM_dir,sep = '')
dir.create("07_gf_model")
dir.create(paste(setwd,new_folder_nm,sep = ''))
# Assign output RDS file name:
outfile_add_043= paste(setwd, new_folder_nm,'/043_model_',model_id,'_gfM_list_react.tsv',sep = '')
outfile_add_045= paste(setwd, new_folder_nm,'/045_model_',model_id,'_gfM_list_metabolites.tsv',sep = '')
outfile_add_046= paste(setwd, new_folder_nm,'/046_model_',model_id,'_gfM_Smat.csv',sep = '')
infile_046     = outfile_add_046
outfile_050    = paste(setwd, new_folder_nm,'/050_model_',model_id,'_gfM_Smat_fluxes.csv',sep = "")
outfile_050_2  = paste(setwd, new_folder_nm,'/050_2_model_',model_id,'_gfM_Smat_fluxes.csv',sep = "")
outfile_050_3 = paste(setwd, new_folder_nm,'/050_model_',model_id,'_gfM_Smat_fluxes_ETC_complexes.tsv',sep = "")
# Load the model RDS file
model_gfm <- readRDS(paste(setwd,"/Input_files/VYCS01/VYCS01.RDS",sep = ""))
## Warning: In readRDS(paste(setwd, "/Input_files/VYCS01/VYCS01.RDS", sep = "")) : strings not representable in native encoding will be translated to UTF-8
#### STEP 1.2: EXTRACT KEGG REACTION IDS FROM .RDS FILE ####
# Extract all reactions from the addReact OM.
model_gfm_list <- list(model_gfm@react_id, model_gfm@react_name, model_gfm@react_rev,
model_gfm@react_single, model_gfm@react_de,model_gfm@lowbnd,
model_gfm@uppbnd, model_gfm@obj_coef, model_gfm@gprRules,
model_gfm@gpr, model_gfm@react_attr)
df_model_gfm_list  <- as.data.frame(model_gfm_list, row.names = NULL)
colnames(df_model_gfm_list) <- c('react_id','react_name','react_rev','react_single',
'react_de','lowbnd','uppbnd','obj_coef','gprRules',
'gpr','seed',"rxn","name","ec","tc","qseqid",
"pident","evalue","bitscore","qcovs","stitle",
"sstart","send","pathway","blast.status",
"pathway.status","complex","exception",
"complex.status","gs.origin","annotation","MNX_ID",
"seedID","keggID","biggID","biocycID")
write.table(df_model_gfm_list, file = outfile_add_043,quote = F,row.names = F,sep='\t')
# The output contains many KEGG reaction ids, which can be converted to SEED RXN ids by using seed_reactions.tsv.
########################## st2. Extract all metabolites from the modified model (MM). #############################
model_gfm_met_name = model_gfm@met_name
model_gfm_met_id = model_gfm@met_id
# model_gfm: Generate a dataframe with metabolite info for each model
model_gfm_list_met <- list(model_gfm@met_id, model_gfm@met_name, model_gfm@met_comp, model_gfm@met_single, model_gfm@met_de)
df_model_gfm_list_met <- as.data.frame(model_gfm_list_met, row.names = NULL)
colnames(df_model_gfm_list_met) <- c('met_id','met_name','met_comp','met_single','met_de')
# R Sort a Data Frame using Order()
df_model_gfm_list_met_sort <- df_model_gfm_list_met[order(df_model_gfm_list_met$met_id),]
write.table(df_model_gfm_list_met_sort, file = outfile_add_045, quote = F,row.names = F,sep='\t')
########################## st3. Extract Stoichiometric matrix from the modified model (MM). #############################
model_gfm_Smat <- model_gfm@S
model_gfm_Smat_mx = as.matrix(model_gfm@S)
colnames(model_gfm_Smat_mx)<-cbind(model_gfm@react_id)
row.names(model_gfm_Smat_mx)<-cbind(model_gfm@met_id)
write.csv(model_gfm_Smat_mx, file = outfile_add_046, quote = FALSE,row.names = T)
# In this table, you can check the flux (values) of a compound (e.g. cpd16503[e0]) of this model based on the reaction ID (e.g. EX_cpd16503_e0).
########################## st6. Check flux from the gfM. #############################
mod = model_gfm
# Adding a new column called 'sol$fluxes' with the same length to the 'reaction id', which shows fluxes of each reaction.
sol <- sybil::optimizeProb(mod, retOptSol=F, algorithm = "fba") # find a list (of 7,sol), which include flux info of 765 reactions for this model.
model_gfm_flux_list <- as.list(sol$fluxes)
model_gfm_flux_list <- as.data.frame(sol$fluxes)
model_gfm_Smat <- mod@S
model_gfm_Smat <- read.csv(file = infile_046,row.names = 'X')
t_model_gfm_Smat <- as.data.frame(t(model_gfm_Smat))
cbind_t_model_gfm_Smat<- as.data.frame(cbind(model_gfm_flux_list, t_model_gfm_Smat))
write.csv(cbind_t_model_gfm_Smat, quote = FALSE,file = outfile_050)
# IMPORTANT: check the flux value of ADD_BIOMASS, if it is negative, it is not right!
gapseq_version = 'gapseq_v20220329'
input_dir = paste(setwd,'/07_gf_model/',gfM_dir,sep = '')
model_id = 'VYCS01'
mycmd1 = 'py /Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Aphrocallistes_beatrix/Modelling/Scripts/Python_scripts/Assign_names_2_ID_of_active_rxn_in_Smax_arg.py'
# Please open "Assign_names_2_ID_of_active_rxn_in_Smax_arg.py" and modify the full path of Dict input files from line 78 to line 80.
system(paste(mycmd1,
'-in_dir',input_dir,
'-modNm', model_id,
'-gs',gapseq_version, sep = ' '))
# output files:
# 051_model_VYCS01_gfM_Smat_fluxes.flux_lt0.csv
# 052_model_VYCS01_gfM_Smat_fluxes.flux_lt0.annotate.tsv
############################################ Run the following script once to get the "seed_reactions_corrected.formatted_reat_add.status.tsv" for the related 043 output file:####################################################
mycmd2 = 'py /Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Aphrocallistes_beatrix/Modelling/Scripts/Python_scripts/Get_a_file_of_formatted_MS_reactions_with_assigned_reaction_and_pathway_status.py'
# Open the python script "Get_a_file_of_formatted_MS_reactions_with_assigned_reaction_and_pathway_status.py", and change the path of "dict_gs_seed_rxn" in line 63.
# path to all-Pathways.tbl
all_path = paste(setwd,'/Input_files/',gfM_dir,model_id,'-all-Pathways.tbl', sep = '')
model_043 = paste('043_model_',model_id,'_gfM_list_react.tsv', sep = '')
system(paste(mycmd2,
'-dir_gfM',input_dir,
'-gs',gapseq_version,
'-dict_pwy_tbl',all_path,
'-dict_043',model_043,
sep = ' '))
# output files:
# seed_reactions_corrected.formatted_reat_add.status.tsv
########### Follow with python script of 'Get_active_rxn_Equ_annot_by_met_from_final_model_argv.py'############
# Create a list of compounds that you have interests in their flux.
list_met = list('cpd00013', #NH3-c0	and NH3-e0
# 'cpd00165', #Hydroxylamine
# 'cpd00011', #CO2
# 'cpd00025', #H2O2
# 'cpd00242', #H2CO3
'cpd00418', # NO
'cpd00528', # N2
# 'cpd00073', # Urea
'cpd00075', # Nitrite
'cpd00209', # Nitrate
# 'cpd00136', # 4-Hydroxybenzoate
# 'cpd00020', # Pyruvate for glycolysis
# 'cpd00027', # D-Glucose
# 'cpd00159', # L-Lactate
# 'cpd00221', # D-Lactate
# 'cpd00086', # Propionyl-CoA for pyruvate fermentation to propanoate I
# 'cpd19008', # (R)-Acetoin for pyruvate fermentation to (R)-acetoin I
# 'cpd11640', # H2 hydrogen
# 'cpd00793', # B1 Thiamine phosphate
# 'cpd00220', #	B2 (Riboflavin); Riboflavin-c0
# 'cpd00644', # B5 (pantothenate); PAN, Pantothenat
# 'cpd00263', #	B6 (Pyridoxine)
# 'cpd00104', #	B7 (Biotin); BIOT
# 'cpd00730', #	B12 OH-Cbl (Hydroxocobalamin)
# 'cpd01826', #	B12 CN-Cbl (Cyanocobalamin)
# 'cpd12878', #	B12 Me-Cbl (Methylcobalamin)
# 'cpd00166', #	B12 Ado-Cbl (adenosylcobalamin); Calomide-c0
# 'cpd00218', # Niacin
# 'cpd00133', # Nicotinamide
#
# 'cpd03177', #"Hydrazine"
# 'cpd11798', #Ferrocytochrome c2
# 'cpd01024', #methane
# 'cpd00146', # Carbamoylphosphate[0]: product of the 1st reaction of the urea cycle
# 'cpd10516', # fe3+
'cpd00007', #O2
# 'cpd00002', #ATP
# 'cpd00067', # H+
# 'cpd11606', #Menaquinone 7
# 'cpd15560' #Ubiquinone-8
'cpd00074', # Sulfer      S (0)
'cpd00239', # H2S         H2S (-1)
'cpd00081', # Sulfite     H2SO3 (+4)
'cpd00268', # Thiosulfate H2S2O3 (+2)
'cpd00048', # Sulfate     H2SO4 (+3)
# 'cpd01270', # FMNH2
'cpd00193', # APS:Adenosine 5'-phosphosulfate
'cpd00042', # GSH: 5-L-Glutamyl-L-cysteinylglycine
'cpd17456', # S-Sulfanylglutathione, 4
'cpd01414', # Tetrathionate
'cpd00109', # CytC 3+
'cpd00210',  # Taurine      organic S
'cpd11416' #biomass
)
mycmd3 = 'py /Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Aphrocallistes_beatrix/Modelling/Scripts/Python_scripts/Get_active_rxn_Equ_annot_by_met_from_final_model_argv3.py'
# Create a new file to store 053_model
dir.create(paste(setwd,'/07_gf_model/',model_id,'/053_model',sep = ''), showWarnings = TRUE, recursive = TRUE)
for (met in list_met) {
print(met)
met_index = paste('-met ',met,sep = '')
system(paste(mycmd3,
'-in_dir',input_dir,
met_index,
'-gs',gapseq_version,
'-modNm', model_id,
sep = ' '))
}
# output files:
# RETURNS A WHOLE LOT OF OUTPUT, DEPENDING ON YOUR LIST_MET LENGTH
# Added a little more: create a folder "053_model" to store these outputs
######################## Follow with python script of 'Get_ETC_complexes_reaction_flux_argv.py '########################
mycmd4 = 'py /Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Aphrocallistes_beatrix/Modelling/Scripts/Python_scripts/Get_ETC_complexes_reaction_flux_argv.py'
system(paste(mycmd4,
'-in_dict ',outfile_050,
'-in_key ',paste(setwd,'/Input_files/DB_files/EC_num_of_ETC_complexes.txt',sep = ''),
'-gs',gapseq_version,
'-out ', outfile_050_3,
sep = ' '))
# output files:
# 050_model_VYCS01_gfM_Smat_fluxes_ETC_complexes.tsv
### New input by faith,
### This additional part is to generate the "XXXX_completely_filled_in_reactions.txt"
### This file consist of reactions only present in the "043" files of the final model compared to the draft model.
### However to get that, we must first generate the files based on the draft model
## Generating files based on draft model
draft_id <- "draft_VYCS01"
# Create a new file to store 053_model
dir.create(paste(setwd,'/07_gf_model/',model_id,'/draft',sep = ''), showWarnings = TRUE, recursive = TRUE)
draft_folder<- paste(new_folder_nm,'draft/',sep = '')
# Assign output RDS file name:
outfile_add_043= paste(setwd, draft_folder,'/043_model_',draft_id,'_gfM_list_react.tsv',sep = '')
outfile_add_045= paste(setwd, draft_folder,'/045_model_',draft_id,'_gfM_list_metabolites.tsv',sep = '')
outfile_add_046= paste(setwd, draft_folder,'/046_model_',draft_id,'_gfM_Smat.csv',sep = '')
infile_046     = outfile_add_046
outfile_050    = paste(setwd, draft_folder,'/050_model_',draft_id,'_gfM_Smat_fluxes.csv',sep = "")
outfile_050_2  = paste(setwd, draft_folder,'/050_2_model_',draft_id,'_gfM_Smat_fluxes.csv',sep = "")
outfile_050_3 = paste(setwd, draft_folder,'/050_model_',draft_id,'_gfM_Smat_fluxes_ETC_complexes.tsv',sep = "")
# Load the model RDS file
draft_gfm <- readRDS(paste(setwd,"/Input_files/VYCS01/VYCS01-draft.RDS",sep = ""))
## Warning message: In readRDS(paste(setwd, "/Input_files/VYCS01/VYCS01-draft.RDS", sep = "")) :strings not representable in native encoding will be translated to UTF-8
#### STEP 1.2: EXTRACT KEGG REACTION IDS FROM .RDS FILE ####
# Extract all reactions from the addReact OM.
draft_gfm_list <- list(draft_gfm@react_id, draft_gfm@react_name, draft_gfm@react_rev,
draft_gfm@react_single, draft_gfm@react_de,draft_gfm@lowbnd,
draft_gfm@uppbnd, draft_gfm@obj_coef, draft_gfm@gprRules,
draft_gfm@gpr, draft_gfm@react_attr)
df_draft_gfm_list  <- as.data.frame(draft_gfm_list, row.names = NULL)
colnames(df_draft_gfm_list) <- c('react_id','react_name','react_rev','react_single',
'react_de','lowbnd','uppbnd','obj_coef','gprRules',
'gpr','seed',"rxn","name","ec","tc","qseqid",
"pident","evalue","bitscore","qcovs","stitle",
"sstart","send","pathway","blast.status",
"pathway.status","complex","exception",
"complex.status","gs.origin","annotation","MNX_ID",
"seedID","keggID","biggID","biocycID")
write.table(df_draft_gfm_list, file = outfile_add_043,quote = F,row.names = F,sep='\t')
# The output contains many KEGG reaction ids, which can be converted to SEED RXN ids by using seed_reactions.tsv.
########################## st2. Extract all metabolites from the modified model (MM). #############################
draft_gfm_met_name = draft_gfm@met_name
draft_gfm_met_id = draft_gfm@met_id
# draft_gfm: Generate a dataframe with metabolite info for each model
draft_gfm_list_met <- list(draft_gfm@met_id, draft_gfm@met_name, draft_gfm@met_comp, draft_gfm@met_single, draft_gfm@met_de)
df_draft_gfm_list_met <- as.data.frame(draft_gfm_list_met, row.names = NULL)
colnames(df_draft_gfm_list_met) <- c('met_id','met_name','met_comp','met_single','met_de')
# R Sort a Data Frame using Order()
df_draft_gfm_list_met_sort <- df_draft_gfm_list_met[order(df_draft_gfm_list_met$met_id),]
write.table(df_draft_gfm_list_met_sort, file = outfile_add_045, quote = F,row.names = F,sep='\t')
########################## st3. Extract Stoichiometric matrix from the modified model (MM). #############################
draft_gfm_Smat <- draft_gfm@S
draft_gfm_Smat_mx = as.matrix(draft_gfm@S)
colnames(draft_gfm_Smat_mx)<-cbind(draft_gfm@react_id)
row.names(draft_gfm_Smat_mx)<-cbind(draft_gfm@met_id)
write.csv(draft_gfm_Smat_mx, file = outfile_add_046, quote = FALSE,row.names = T)
# In this table, you can check the flux (values) of a compound (e.g. cpd16503[e0]) of this model based on the reaction ID (e.g. EX_cpd16503_e0).
########################## st6. Check flux from the gfM. #############################
mod = draft_gfm
# Adding a new column called 'sol$fluxes' with the same length to the 'reaction id', which shows fluxes of each reaction.
sol <- sybil::optimizeProb(mod, retOptSol=F, algorithm = "fba") # find a list (of 7,sol), which include flux info of 765 reactions for this model.
draft_gfm_flux_list <- as.list(sol$fluxes)
draft_gfm_flux_list <- as.data.frame(sol$fluxes)
draft_gfm_Smat <- mod@S
draft_gfm_Smat <- read.csv(file = infile_046,row.names = 'X')
t_draft_gfm_Smat <- as.data.frame(t(draft_gfm_Smat))
cbind_t_draft_gfm_Smat<- as.data.frame(cbind(draft_gfm_flux_list, t_draft_gfm_Smat))
write.csv(cbind_t_draft_gfm_Smat, quote = FALSE,file = outfile_050)
# IMPORTANT: check the flux value of ADD_BIOMASS, if it is negative, it is not right!
### Generating "XXXX_completely_filled_in_reactions.txt"
# This file consist of reactions only present in the "043" files of the final model compared to the draft model.
# The 043 file for final model is stored in df_model_gfm_list
# The 043 file for draft model is stored in df_draft_gfm_list
filled_rxn<-anti_join(df_model_gfm_list,df_draft_gfm_list, by="react_id")
write.table(filled_rxn, file = paste(setwd,new_folder_nm,model_id,"_completely_filled_in_reactions.txt", sep = ""), sep = "")
# Set to where you want the script to run on
dir_out = setwd('/Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Aphrocallistes_beatrix/Modelling/Scripts')
gapseq_version  = 'gapseq_v20220329'
# Import the gap-filled modified object model (gfM):
# Change accordingly to the name of the object model!
gfM_dir = 'VYCS01/'
model_id = 'VYCS01'
# Navigate to the python code "Get_formatted_equations_n_flux_of_MS_react_in_gfModel.py"
python_code  = 'py /Users/chiny/Desktop/UNSW/Gapseq_sponge_MAGs/Sponge_Aphrocallistes_beatrix/Modelling/Scripts/Python_scripts/Get_formatted_equations_n_flux_of_MS_react_in_gfModel.py'
# Navigate to where the seed reaction tsv "seed_reactions_corrected.formatted_reat_add.tsv"
dict_seed_reactions_corrected_tsv   = paste('/Users/chiny/Bioinfo/software/gapseq/',gapseq_version,'/Shan_output_files/seed_reactions_corrected.formatted_reat_add.tsv',sep = '')
# Navigate to where the Smat_fluxes file is located (e.g."050_model_XXXX_gfM_Smat_fluxes.csv")
infile_flux = paste(dir_out,'/07_gf_model/',gfM_dir,'050_model_',model_id,'_gfM_Smat_fluxes.csv',sep = '')
# Navigate to file with flux of MS ids (050_model_xxxxxx_gfMOM_Smat_fluxes.csv)
infile_key_list = paste(dir_out,'/07_gf_model/',gfM_dir,model_id,'_completely_filled_in_reactions.txt',sep = '')
outfile_key_list_equation_formatted = paste(dir_out,'/medium',model_id,'_completely_filled_in_reactions.equation_formatted_n_fluxes.txt',sep = '')
commands = paste(python_code,
'-infile_MSid',infile_key_list,
'-infile_flux', infile_flux,
'-db',dict_seed_reactions_corrected_tsv,
'-outfile',outfile_key_list_equation_formatted,
'-gs',gapseq_version, sep = ' ')
system(commands)
